<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.jeecg.modules.member.mapper.MemberGoodsCollectionMapper">
    <select id="getMemberGoodsCollectionVo" resultType="org.jeecg.modules.member.dto.MemberGoodsCollectionDto">
        SELECT
        mgc.id AS id,
        mgc.good_type AS good_type,
        mgc.collect_price as collect_price,
        mgc.collection_time AS collection_time,
        mgc.del_flag AS del_flag,
        ml.head_portrait AS head_portrait,
        ml.phone AS phone,
        ml.nick_name AS nick_name,
        gl.good_name AS good_name,
        gl.price AS price,
        gl.frame_status AS frame_status,
        gl.activities_type AS activities_type
        FROM (member_goods_collection mgc  LEFT JOIN  member_list ml ON mgc.`member_list_id`=ml.`id`) LEFT JOIN good_list gl ON  mgc.`good_list_id`=gl.id
        where mgc.del_flag = 0
        <if test="memberGoodsCollectionVo != null and memberGoodsCollectionVo.phone != null and memberGoodsCollectionVo.phone != ''">
            and  ml.phone LIKE concat('%',#{memberGoodsCollectionVo.phone},'%')
        </if>
        <if test="memberGoodsCollectionVo != null and memberGoodsCollectionVo.nickName != null and memberGoodsCollectionVo.nickName != ''">
            and   ml.nick_name LIKE concat('%',#{memberGoodsCollectionVo.nickName},'%')
        </if>
        <if test="memberGoodsCollectionVo != null and memberGoodsCollectionVo.createTime_begin != null and memberGoodsCollectionVo.createTime_begin != ''">
            and mgc.collection_time <![CDATA[>=]]> concat(#{memberGoodsCollectionVo.createTime_begin},' 00:00:00')
        </if>
        <if test="memberGoodsCollectionVo != null and memberGoodsCollectionVo.createTime_end != null and memberGoodsCollectionVo.createTime_end != ''">
            AND mgc.collection_time <![CDATA[<=]]> concat( #{memberGoodsCollectionVo.createTime_end},' 23:59:59')
        </if>
        ORDER BY mgc.create_time DESC
    </select>

    <select id="findMemberGoodsCollections" resultType="map" parameterType="map">
                     select * from (SELECT
                  asd.*,
                  (asd.collectPrice-asd.price) AS depreciate,
                    (SELECT
                    COUNT(1)
                    FROM
                    marketing_discount_good
                    WHERE good_id = asd.goodId and del_flag = '0') AS discounts
                FROM
                  (SELECT
                    mgo.id,
                    mgo.good_type AS isPlatform,
                    mgo.good_store_list_id AS goodId,
                    mgo.collect_price AS collectPrice,
                    mgo.collection_time AS collectionTime,
                    g.*,
                    IF(
                      g.memberType = 0,
                      g.smallPrice,
                      g.smallVipPrice
                    ) AS price,
                    mgo.prefecture_label AS label,
                    mgo.marketing_prefecture_id AS marketingPrefectureId
                  FROM
                    `member_goods_collection` mgo
                    LEFT JOIN
                      (SELECT
                        good_name AS goodName,
                        small_vip_price AS smallVipPrice,
                        small_price AS smallPrice,
                        main_picture as mainPicture,
                        (SELECT
                          member_type
                        FROM
                          `member_list`
                        WHERE id = #{paramMap.memberId}) AS memberType,
                        activities_type AS activitiesType,
                        id AS gid,
                        repertory,
                        frame_status AS frameStatus,
                        STATUS
                      FROM
                        `good_store_list`) g
                      ON mgo.good_store_list_id = g.gid
                  WHERE mgo.member_list_id = #{paramMap.memberId}
                    AND mgo.del_flag = '0'
                    AND mgo.good_type = '0'
                  UNION
                  SELECT
                    mgc.id,
                    mgc.good_type AS isPlatform,
                    mgc.good_list_id AS goodId,
                    mgc.collect_price AS collectPrice,
                    mgc.collection_time AS collectionTime,
                    g.*,
                    IF(
                      g.memberType = 0,
                      g.smallPrice,
                      g.smallVipPrice
                    ) AS price,
                    mgc.prefecture_label AS label,
                    mgc.marketing_prefecture_id AS marketingPrefectureId
                  FROM
                    `member_goods_collection` mgc
                    LEFT JOIN
                      (SELECT
                        good_name AS goodName,
                        small_vip_price AS smallVipPrice,
                        small_price AS smallPrice,
                        main_picture as mainPicture,
                        (SELECT
                          member_type
                        FROM
                          `member_list`
                        WHERE id = #{paramMap.memberId}) AS memberType,
                        activities_type AS activitiesType,
                        id AS gid,
                        repertory,
                        frame_status AS frameStatus,
                        STATUS
                      FROM
                        `good_list`) g
                      ON mgc.good_list_id = g.gid
                  WHERE mgc.member_list_id = #{paramMap.memberId}
                    AND mgc.del_flag = '0'
                    AND mgc.good_type = '1') asd) bsd
        <if test="paramMap.pattern==1">order by bsd.depreciate,bsd.discounts,bsd.activitiesType desc </if>
        <if test="paramMap.pattern==2">order by bsd.depreciate desc</if>
        <if test="paramMap.pattern==3">order by bsd.activitiesType desc</if>
        <if test="paramMap.pattern==4">order by bsd.discounts desc</if>

    </select>

</mapper>